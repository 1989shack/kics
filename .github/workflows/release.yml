name: goreleaser

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  push_to_registry_linux:
    name: Push Docker Image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Get Release version
        id: get-version
        run: echo "::set-output name=version::$(git describe --tags --abbrev=0)"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push scratch to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: checkmarx/kics:latest,checkmarx/kics:${{ steps.get-version.outputs.version }}
          build-args: |
            VERSION=${{ steps.get-version.outputs.version }}
      - name: Push alpine to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.integration
          push: true
          tags: checkmarx/kics:latest-alpine,checkmarx/kics:${{ steps.get-version.outputs.version }}-alpine
          build-args: |
            VERSION=${{ steps.get-version.outputs.version }}
  push_to_registry_windows:
    name: Push Windows Container Docker Image to DockerHub
    runs-on: windows-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker build on Windows
        run: docker build --build-arg "VERSION=${{ steps.get-version.outputs.version }}" -f Dockerfile.windows -t checkmarx/kics:nanoserver-1809-latest .
      - name: Push docker image
        run: |
          docker tag checkmarx/kics:nanoserver-1809-latest checkmarx/kics:nanoserver-1809-${{ steps.get-version.outputs.version }}
          docker push checkmarx/kics:nanoserver-1809-latest
          docker push checkmarx/kics:nanoserver-1809-${{ steps.get-version.outputs.version }}
